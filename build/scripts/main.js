/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/scripts/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOlsiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVzb2x2ZSIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiYXJnIiwiaW5mbyIsInZhbHVlIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGtCQUFULENBQTRCQyxHQUE1QixFQUFpQ0MsT0FBakMsRUFBMENDLE1BQTFDLEVBQWtEQyxLQUFsRCxFQUF5REMsTUFBekQsRUFBaUVDLEdBQWpFLEVBQXNFQyxHQUF0RSxFQUEyRTtBQUN6RSxNQUFJO0FBQ0YsUUFBSUMsSUFBSSxHQUFHUCxHQUFHLENBQUNLLEdBQUQsQ0FBSCxDQUFTQyxHQUFULENBQVg7QUFDQSxRQUFJRSxLQUFLLEdBQUdELElBQUksQ0FBQ0MsS0FBakI7QUFDRCxHQUhELENBR0UsT0FBT0MsS0FBUCxFQUFjO0FBQ2RQLFVBQU0sQ0FBQ08sS0FBRCxDQUFOO0FBQ0E7QUFDRDs7QUFFRCxNQUFJRixJQUFJLENBQUNHLElBQVQsRUFBZTtBQUNiVCxXQUFPLENBQUNPLEtBQUQsQ0FBUDtBQUNELEdBRkQsTUFFTztBQUNMRyxXQUFPLENBQUNWLE9BQVIsQ0FBZ0JPLEtBQWhCLEVBQXVCSSxJQUF2QixDQUE0QlQsS0FBNUIsRUFBbUNDLE1BQW5DO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTUyxpQkFBVCxDQUEyQkMsRUFBM0IsRUFBK0I7QUFDN0IsU0FBTyxZQUFZO0FBQ2pCLFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQUEsUUFDSUMsSUFBSSxHQUFHQyxTQURYO0FBRUEsV0FBTyxJQUFJTixPQUFKLENBQVksVUFBVVYsT0FBVixFQUFtQkMsTUFBbkIsRUFBMkI7QUFDNUMsVUFBSUYsR0FBRyxHQUFHYyxFQUFFLENBQUNJLEtBQUgsQ0FBU0gsSUFBVCxFQUFlQyxJQUFmLENBQVY7O0FBRUEsZUFBU2IsS0FBVCxDQUFlSyxLQUFmLEVBQXNCO0FBQ3BCVCwwQkFBa0IsQ0FBQ0MsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsRUFBdUJDLEtBQXZCLEVBQThCQyxNQUE5QixFQUFzQyxNQUF0QyxFQUE4Q0ksS0FBOUMsQ0FBbEI7QUFDRDs7QUFFRCxlQUFTSixNQUFULENBQWdCZSxHQUFoQixFQUFxQjtBQUNuQnBCLDBCQUFrQixDQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBZUMsTUFBZixFQUF1QkMsS0FBdkIsRUFBOEJDLE1BQTlCLEVBQXNDLE9BQXRDLEVBQStDZSxHQUEvQyxDQUFsQjtBQUNEOztBQUVEaEIsV0FBSyxDQUFDaUIsU0FBRCxDQUFMO0FBQ0QsS0FaTSxDQUFQO0FBYUQsR0FoQkQ7QUFpQkQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsaUJBQWpCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3luY1RvR2VuZXJhdG9yOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcz85NzBiIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxlQUFULENBQXlCQyxRQUF6QixFQUFtQ0MsV0FBbkMsRUFBZ0Q7QUFDOUMsTUFBSSxFQUFFRCxRQUFRLFlBQVlDLFdBQXRCLENBQUosRUFBd0M7QUFDdEMsVUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTjtBQUNEO0FBQ0Y7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsZUFBakIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQ2FsbENoZWNrOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcz81YmMzIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxpQkFBVCxDQUEyQkMsTUFBM0IsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQ3hDLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsS0FBSyxDQUFDRSxNQUExQixFQUFrQ0QsQ0FBQyxFQUFuQyxFQUF1QztBQUNyQyxRQUFJRSxVQUFVLEdBQUdILEtBQUssQ0FBQ0MsQ0FBRCxDQUF0QjtBQUNBRSxjQUFVLENBQUNDLFVBQVgsR0FBd0JELFVBQVUsQ0FBQ0MsVUFBWCxJQUF5QixLQUFqRDtBQUNBRCxjQUFVLENBQUNFLFlBQVgsR0FBMEIsSUFBMUI7QUFDQSxRQUFJLFdBQVdGLFVBQWYsRUFBMkJBLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQixJQUF0QjtBQUMzQkMsVUFBTSxDQUFDQyxjQUFQLENBQXNCVCxNQUF0QixFQUE4QkksVUFBVSxDQUFDTSxHQUF6QyxFQUE4Q04sVUFBOUM7QUFDRDtBQUNGOztBQUVELFNBQVNPLFlBQVQsQ0FBc0JDLFdBQXRCLEVBQW1DQyxVQUFuQyxFQUErQ0MsV0FBL0MsRUFBNEQ7QUFDMUQsTUFBSUQsVUFBSixFQUFnQmQsaUJBQWlCLENBQUNhLFdBQVcsQ0FBQ0csU0FBYixFQUF3QkYsVUFBeEIsQ0FBakI7QUFDaEIsTUFBSUMsV0FBSixFQUFpQmYsaUJBQWlCLENBQUNhLFdBQUQsRUFBY0UsV0FBZCxDQUFqQjtBQUNqQixTQUFPRixXQUFQO0FBQ0Q7O0FBRURJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sWUFBakIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY3JlYXRlQ2xhc3M7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcz85NTIzIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUE4QkMsR0FBOUIsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQ3hDLE1BQUlELEdBQUcsSUFBSUQsR0FBWCxFQUFnQjtBQUNkRyxVQUFNLENBQUNDLGNBQVAsQ0FBc0JKLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQztBQUM5QkMsV0FBSyxFQUFFQSxLQUR1QjtBQUU5QkcsZ0JBQVUsRUFBRSxJQUZrQjtBQUc5QkMsa0JBQVksRUFBRSxJQUhnQjtBQUk5QkMsY0FBUSxFQUFFO0FBSm9CLEtBQWhDO0FBTUQsR0FQRCxNQU9PO0FBQ0xQLE9BQUcsQ0FBQ0MsR0FBRCxDQUFILEdBQVdDLEtBQVg7QUFDRDs7QUFFRCxTQUFPRixHQUFQO0FBQ0Q7O0FBRURRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsZUFBakIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsbUJBQU8sQ0FBQywwRUFBRCxDQUF4QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : undefined);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./src/scripts/main.js":
/*!*****************************!*\
  !*** ./src/scripts/main.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_VoiceDialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/VoiceDialog */ \"./src/scripts/modules/VoiceDialog.js\");\n/* harmony import */ var _modules_TestSpeachApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/TestSpeachApi */ \"./src/scripts/modules/TestSpeachApi.js\");\n\nwindow.voiceDialog = new _modules_VoiceDialog__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\nwindow.testSpeachApi = new _modules_TestSpeachApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9tYWluLmpzPzI5NjMiXSwibmFtZXMiOlsid2luZG93Iiwidm9pY2VEaWFsb2ciLCJWb2ljZURpYWxvZyIsInRlc3RTcGVhY2hBcGkiLCJUZXN0U3BlYWNoQXBpIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBQSxNQUFNLENBQUNDLFdBQVAsR0FBcUIsSUFBSUMsNERBQUosRUFBckI7QUFFQTtBQUNBRixNQUFNLENBQUNHLGFBQVAsR0FBdUIsSUFBSUMsOERBQUosRUFBdkIiLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tYWluLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZvaWNlRGlhbG9nIGZyb20gJy4vbW9kdWxlcy9Wb2ljZURpYWxvZyc7XHJcbndpbmRvdy52b2ljZURpYWxvZyA9IG5ldyBWb2ljZURpYWxvZygpO1xyXG5cclxuaW1wb3J0IFRlc3RTcGVhY2hBcGkgZnJvbSAnLi9tb2R1bGVzL1Rlc3RTcGVhY2hBcGknO1xyXG53aW5kb3cudGVzdFNwZWFjaEFwaSA9IG5ldyBUZXN0U3BlYWNoQXBpKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/main.js\n");

/***/ }),

/***/ "./src/scripts/modules/TestSpeachApi.js":
/*!**********************************************!*\
  !*** ./src/scripts/modules/TestSpeachApi.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TestSpeachApi; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _xhr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./xhr */ \"./src/scripts/modules/xhr.js\");\n\n\n\n\n\n\nvar TestSpeachApi =\n/*#__PURE__*/\nfunction () {\n  function TestSpeachApi() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, TestSpeachApi);\n\n    console.log('%c%s', window.log_color ? window.log_color.blue : '', 'TestSpeachApi');\n    this.XHR = new _xhr__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n    this.testMsgUrl = 'https://psv4.userapi.com/c852436//u281986614/audiomsg/d8/fddec1089c.mp3';\n    this.test();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(TestSpeachApi, [{\n    key: \"test\",\n    value: function () {\n      var _test = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n        var res;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.XHR.request(this.testMsgUrl, {\n                  responseType: 'arraybuffer'\n                });\n\n              case 2:\n                res = _context.sent;\n                console.log(res);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function test() {\n        return _test.apply(this, arguments);\n      }\n\n      return test;\n    }()\n  }]);\n\n  return TestSpeachApi;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9tb2R1bGVzL1Rlc3RTcGVhY2hBcGkuanM/ZGVlOSJdLCJuYW1lcyI6WyJUZXN0U3BlYWNoQXBpIiwiY29uc29sZSIsImxvZyIsIndpbmRvdyIsImxvZ19jb2xvciIsImJsdWUiLCJYSFIiLCJYaHIiLCJ0ZXN0TXNnVXJsIiwidGVzdCIsInJlcXVlc3QiLCJyZXNwb25zZVR5cGUiLCJyZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztJQUVxQkEsYTs7O0FBQ2pCLDJCQUFjO0FBQUE7O0FBQ1ZDLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVosRUFBcUJDLE1BQU0sQ0FBQ0MsU0FBUixHQUFxQkQsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxJQUF0QyxHQUE2QyxFQUFqRSxFQUFxRSxlQUFyRTtBQUVBLFNBQUtDLEdBQUwsR0FBVyxJQUFJQyw0Q0FBSixFQUFYO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQix5RUFBbEI7QUFFQSxTQUFLQyxJQUFMO0FBQ0g7Ozs7Ozs7Ozs7Ozs7O3VCQUdtQixLQUFLSCxHQUFMLENBQVNJLE9BQVQsQ0FBaUIsS0FBS0YsVUFBdEIsRUFBa0M7QUFDOUNHLDhCQUFZLEVBQUU7QUFEZ0MsaUJBQWxDLEM7OztBQUFaQyxtQjtBQUlKWCx1QkFBTyxDQUFDQyxHQUFSLENBQVlVLEdBQVoiLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb2R1bGVzL1Rlc3RTcGVhY2hBcGkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgWGhyIGZyb20gJy4veGhyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlc3RTcGVhY2hBcGkge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJyVjJXMnLCAod2luZG93LmxvZ19jb2xvcikgPyB3aW5kb3cubG9nX2NvbG9yLmJsdWUgOiAnJywgJ1Rlc3RTcGVhY2hBcGknKTtcclxuXHJcbiAgICAgICAgdGhpcy5YSFIgPSBuZXcgWGhyKCk7XHJcbiAgICAgICAgdGhpcy50ZXN0TXNnVXJsID0gJ2h0dHBzOi8vcHN2NC51c2VyYXBpLmNvbS9jODUyNDM2Ly91MjgxOTg2NjE0L2F1ZGlvbXNnL2Q4L2ZkZGVjMTA4OWMubXAzJztcclxuXHJcbiAgICAgICAgdGhpcy50ZXN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgdGVzdCgpIHtcclxuICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5YSFIucmVxdWVzdCh0aGlzLnRlc3RNc2dVcmwsIHtcclxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInLFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG5cclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/modules/TestSpeachApi.js\n");

/***/ }),

/***/ "./src/scripts/modules/VoiceDialog.js":
/*!********************************************!*\
  !*** ./src/scripts/modules/VoiceDialog.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return VoiceDialog; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _task_launcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./task-launcher */ \"./src/scripts/modules/task-launcher.js\");\n/* harmony import */ var _nav_watcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nav-watcher */ \"./src/scripts/modules/nav-watcher.js\");\n\n\n\n\nvar VoiceDialog = function VoiceDialog() {\n  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, VoiceDialog);\n\n  // console.log('TaskLauncher: ', TaskLauncher);\n  // console.log('NavWatcher: ', NavWatcher);\n  console.log('%c%s', window.log_color ? window.log_color.blue : '', 'VoiceDialog');\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9tb2R1bGVzL1ZvaWNlRGlhbG9nLmpzPzlmMjYiXSwibmFtZXMiOlsiVm9pY2VEaWFsb2ciLCJjb25zb2xlIiwibG9nIiwid2luZG93IiwibG9nX2NvbG9yIiwiYmx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0lBRXFCQSxXLEdBQ2pCLHVCQUFjO0FBQUE7O0FBQ1Y7QUFDQTtBQUNBQyxTQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaLEVBQXFCQyxNQUFNLENBQUNDLFNBQVIsR0FBcUJELE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsSUFBdEMsR0FBNkMsRUFBakUsRUFBcUUsYUFBckU7QUFHSCxDIiwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvbW9kdWxlcy9Wb2ljZURpYWxvZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUYXNrTGF1bmNoZXIgZnJvbSAnLi90YXNrLWxhdW5jaGVyJztcclxuaW1wb3J0IE5hdldhdGNoZXIgZnJvbSAnLi9uYXYtd2F0Y2hlcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWb2ljZURpYWxvZyB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnVGFza0xhdW5jaGVyOiAnLCBUYXNrTGF1bmNoZXIpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdOYXZXYXRjaGVyOiAnLCBOYXZXYXRjaGVyKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnJWMlcycsICh3aW5kb3cubG9nX2NvbG9yKSA/IHdpbmRvdy5sb2dfY29sb3IuYmx1ZSA6ICcnLCAnVm9pY2VEaWFsb2cnKTtcclxuXHJcblxyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/modules/VoiceDialog.js\n");

/***/ }),

/***/ "./src/scripts/modules/nav-watcher.js":
/*!********************************************!*\
  !*** ./src/scripts/modules/nav-watcher.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavWatcher; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar NavWatcher =\n/*#__PURE__*/\nfunction () {\n  function NavWatcher(callback_param) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, NavWatcher);\n\n    this.was_init = false;\n    this.originalNavSetLoc = null;\n    this.callback = callback_param.callback;\n    this.callback_ctx = callback_param.context || window;\n    this.init();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(NavWatcher, [{\n    key: \"navSetLocDecorator\",\n    value: function navSetLocDecorator() {\n      var _this$originalNavSetL;\n\n      var res_return = (_this$originalNavSetL = this.originalNavSetLoc).call.apply(_this$originalNavSetL, [window.nav].concat(Array.prototype.slice.call(arguments)));\n\n      var new_loc = Object.assign({}, window.nav.objLoc);\n      this.callback.call(this.callback_ctx, new_loc);\n      return res_return;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      if (window.nav && window.nav.setLoc && !this.was_init) {\n        this.was_init = true;\n        console.log('%c%s', window.log_color ? window.log_color.blue : '', 'NavWatcher: Init');\n        this.originalNavSetLoc = window.nav.setLoc;\n        window.nav.setLoc = this.navSetLocDecorator.bind(this);\n      } else {\n        requestAnimationFrame(this.init.bind(this));\n      }\n    }\n  }]);\n\n  return NavWatcher;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9tb2R1bGVzL25hdi13YXRjaGVyLmpzPzUzNTAiXSwibmFtZXMiOlsiTmF2V2F0Y2hlciIsImNhbGxiYWNrX3BhcmFtIiwid2FzX2luaXQiLCJvcmlnaW5hbE5hdlNldExvYyIsImNhbGxiYWNrIiwiY2FsbGJhY2tfY3R4IiwiY29udGV4dCIsIndpbmRvdyIsImluaXQiLCJyZXNfcmV0dXJuIiwiY2FsbCIsIm5hdiIsImFyZ3VtZW50cyIsIm5ld19sb2MiLCJPYmplY3QiLCJhc3NpZ24iLCJvYmpMb2MiLCJzZXRMb2MiLCJjb25zb2xlIiwibG9nIiwibG9nX2NvbG9yIiwiYmx1ZSIsIm5hdlNldExvY0RlY29yYXRvciIsImJpbmQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztJQUFxQkEsVTs7O0FBQ2pCLHNCQUFZQyxjQUFaLEVBQTRCO0FBQUE7O0FBQ3hCLFNBQUtDLFFBQUwsR0FBZ0IsS0FBaEI7QUFDQSxTQUFLQyxpQkFBTCxHQUF5QixJQUF6QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JILGNBQWMsQ0FBQ0csUUFBL0I7QUFDQSxTQUFLQyxZQUFMLEdBQW9CSixjQUFjLENBQUNLLE9BQWYsSUFBMEJDLE1BQTlDO0FBR0EsU0FBS0MsSUFBTDtBQUNIOzs7O3lDQUVvQjtBQUFBOztBQUNqQixVQUFJQyxVQUFVLEdBQUcsOEJBQUtOLGlCQUFMLEVBQXVCTyxJQUF2QiwrQkFBNEJILE1BQU0sQ0FBQ0ksR0FBbkMsb0NBQTJDQyxTQUEzQyxHQUFqQjs7QUFDQSxVQUFJQyxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JSLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXSyxNQUE3QixDQUFkO0FBRUEsV0FBS1osUUFBTCxDQUFjTSxJQUFkLENBQW1CLEtBQUtMLFlBQXhCLEVBQXNDUSxPQUF0QztBQUVBLGFBQU9KLFVBQVA7QUFDSDs7OzJCQUVNO0FBQ0gsVUFBSUYsTUFBTSxDQUFDSSxHQUFQLElBQWNKLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXTSxNQUF6QixJQUFtQyxDQUFDLEtBQUtmLFFBQTdDLEVBQXVEO0FBQ25ELGFBQUtBLFFBQUwsR0FBZ0IsSUFBaEI7QUFDQWdCLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVosRUFBcUJaLE1BQU0sQ0FBQ2EsU0FBUixHQUFxQmIsTUFBTSxDQUFDYSxTQUFQLENBQWlCQyxJQUF0QyxHQUE2QyxFQUFqRSxFQUFxRSxrQkFBckU7QUFFQSxhQUFLbEIsaUJBQUwsR0FBeUJJLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXTSxNQUFwQztBQUNBVixjQUFNLENBQUNJLEdBQVAsQ0FBV00sTUFBWCxHQUFvQixLQUFLSyxrQkFBTCxDQUF3QkMsSUFBeEIsQ0FBNkIsSUFBN0IsQ0FBcEI7QUFDSCxPQU5ELE1BTU87QUFDSEMsNkJBQXFCLENBQUMsS0FBS2hCLElBQUwsQ0FBVWUsSUFBVixDQUFlLElBQWYsQ0FBRCxDQUFyQjtBQUNIO0FBQ0oiLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb2R1bGVzL25hdi13YXRjaGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmF2V2F0Y2hlciB7XG4gICAgY29uc3RydWN0b3IoY2FsbGJhY2tfcGFyYW0pIHtcbiAgICAgICAgdGhpcy53YXNfaW5pdCA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9yaWdpbmFsTmF2U2V0TG9jID0gbnVsbDtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrX3BhcmFtLmNhbGxiYWNrO1xuICAgICAgICB0aGlzLmNhbGxiYWNrX2N0eCA9IGNhbGxiYWNrX3BhcmFtLmNvbnRleHQgfHwgd2luZG93O1xuXG5cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuXG4gICAgbmF2U2V0TG9jRGVjb3JhdG9yKCkge1xuICAgICAgICBsZXQgcmVzX3JldHVybiA9IHRoaXMub3JpZ2luYWxOYXZTZXRMb2MuY2FsbCh3aW5kb3cubmF2LCAuLi5hcmd1bWVudHMpO1xuICAgICAgICBsZXQgbmV3X2xvYyA9IE9iamVjdC5hc3NpZ24oe30sIHdpbmRvdy5uYXYub2JqTG9jKTtcblxuICAgICAgICB0aGlzLmNhbGxiYWNrLmNhbGwodGhpcy5jYWxsYmFja19jdHgsIG5ld19sb2MpO1xuXG4gICAgICAgIHJldHVybiByZXNfcmV0dXJuO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIGlmICh3aW5kb3cubmF2ICYmIHdpbmRvdy5uYXYuc2V0TG9jICYmICF0aGlzLndhc19pbml0KSB7XG4gICAgICAgICAgICB0aGlzLndhc19pbml0ID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCclYyVzJywgKHdpbmRvdy5sb2dfY29sb3IpID8gd2luZG93LmxvZ19jb2xvci5ibHVlIDogJycsICdOYXZXYXRjaGVyOiBJbml0Jyk7XG5cbiAgICAgICAgICAgIHRoaXMub3JpZ2luYWxOYXZTZXRMb2MgPSB3aW5kb3cubmF2LnNldExvYztcbiAgICAgICAgICAgIHdpbmRvdy5uYXYuc2V0TG9jID0gdGhpcy5uYXZTZXRMb2NEZWNvcmF0b3IuYmluZCh0aGlzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmluaXQuYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/modules/nav-watcher.js\n");

/***/ }),

/***/ "./src/scripts/modules/task-launcher.js":
/*!**********************************************!*\
  !*** ./src/scripts/modules/task-launcher.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TaskLauncher; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar TaskLauncher =\n/*#__PURE__*/\nfunction () {\n  /*  tasks = {\r\n   *       condition:  @Function: должна проверять условие, необходимое для вызова callback и возвращать boolean.\r\n   *       callback:   @Function: вызовется когда condition вернет true.\r\n   *       name:       @String: Имя таска для более удобного управления им. Необязательный.\r\n   *       arg:        @Any: один аргумент, который передастся в callback при его вызове. Необязательный.\r\n   *                   @Function: если передана функция, то все, что она вернет, будет передано в callback при его вызове.\r\n   *       attempts:   @Number: количество попыток для проверки условия. Необязательный.\r\n   *                   Если не передан, проверка будет бесконечной, пока condition не вернет true или не будет вызван метод остановки .stop()\r\n   *       run:        @Boolean: если true, то запуск таска произойдет автоматически, без вызова .run(). Необязательный.\r\n   *   } */\n  function TaskLauncher() {\n    var _this = this;\n\n    var _tasks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, TaskLauncher);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"running\", false);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"rafId\", 0);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"tasks\", []);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"add\", function (tasks) {\n      var newTasks = [];\n      var added = false;\n\n      if (tasks instanceof Array) {\n        added = [];\n        newTasks = tasks;\n      } else if (tasks instanceof Object) {\n        newTasks.push(tasks);\n      }\n\n      newTasks.forEach(function (task) {\n        // Валидация таска\n        if (!task.condition || typeof task.condition !== 'function') {\n          console.warn('Laucher: не передано условие', task);\n          return;\n        }\n\n        if (!task.callback || typeof task.callback !== 'function') {\n          console.warn('Laucher: не передан коллбек', task);\n          return;\n        } // Подготовка таска\n\n\n        task.attempts = task.attempts || Infinity;\n        task.tryNum = 0;\n        task.run = task.run || false;\n        task.complete = null; // Добавление в общий массив тасков\n\n        _this.tasks.push(task);\n\n        var addedIndex = _this.tasks.length - 1;\n\n        if (added instanceof Array) {\n          added.push(addedIndex);\n        } else {\n          added = addedIndex;\n        }\n      }); // Попытка запуска тасков после добавления\n\n      _this._launch();\n\n      return added;\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"hasActive\", function () {\n      return _this.tasks.some(function (task) {\n        return task.run;\n      });\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"_launch\", function (rafId) {\n      // Если не рекурсивный запуск и уже запущен процесс проверки тасков, или нет активных, то выходим\n      if (_this.rafId !== rafId && (_this.running || !_this.hasActive())) return;\n      _this.running = true;\n\n      _this.tasks.forEach(function (task, index) {\n        // Если таск не активный, то выходим\n        if (!task.run) return; // Если функция условия таска вернула true, отключаем дальнейшее выполнение таска и выззываем callback\n\n        if (task.condition.call(_this)) {\n          _this.stop(index);\n\n          task.complete = true;\n          task.callback.call(_this, typeof task.arg === 'function' ? task.arg.call(_this, index) : task.arg); // Если функция условия вернула false и количество попыток исчерпано, тормозим таск\n        } else if (!task.condition.call(_this)) {\n          task.tryNum++;\n\n          if (task.tryNum >= task.attempts) {\n            _this.stop(index);\n\n            task.complete = false;\n          }\n        }\n      }); // После цикла по таскам проверяем остались ли активные таски\n      // Если активные таски есть, планируем следующий запуск _launch\n\n\n      if (_this.hasActive()) {\n        _this.rafId = requestAnimationFrame(function () {\n          return _this._launch(_this.rafId);\n        }); // Если таски все завершены, то переходим в глобальное состояние остановки\n      } else {\n        _this.stop();\n      }\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"_runTask\", function (taskId, arg) {\n      var index = _this.findIndex(taskId);\n\n      if (index === false) return false; // Если нет аргумениа и таск уже запущен, возвращаем false\n\n      if (!arg && _this.tasks[index].run) return false; // Запускаем таск\n\n      _this.tasks[index].run = true; // Отмечаем что таск не вполнен\n\n      _this.tasks[index].complete = null; // Если есть аргумент, обновим его в таске\n\n      if (arg) _this.tasks[index].arg = arg;\n      return index;\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"run\", function () {\n      var runs; // Если аргументов нет, то запуск всех тасков\n\n      if (arguments.length === 0) {\n        runs = [];\n\n        _this.tasks.forEach(function (task, index) {\n          _this._runTask(index);\n\n          runs.push(index);\n        }); // Если аргумент один, то это индекс или имя таска\n\n      } else if (arguments.length === 1) {\n        runs = _this._runTask(arguments.length <= 0 ? undefined : arguments[0]); // Если аргумента два, то в первом индекс/имя таска, а во втором обновление для task.arg\n      } else if (arguments.length === 2) {\n        runs = _this._runTask(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n      } // Запуск выполнения проверки активных тасков\n\n\n      _this._launch();\n\n      return runs;\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"stop\", function (taskId) {\n      var stoped;\n\n      if (taskId !== undefined) {\n        var index = _this._stopTask(taskId);\n\n        if (index === false) return false;\n        stoped = index;\n      } else {\n        stoped = [];\n\n        _this.tasks.forEach(function (task, idx) {\n          _this._stopTask(idx);\n\n          stoped.push(idx);\n        });\n\n        _this.running = false;\n        cancelAnimationFrame(_this.rafId);\n        _this.rafId = 0;\n      }\n\n      return stoped;\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, \"remove\", function (taskId) {\n      var removed;\n\n      if (taskId !== undefined) {\n        var index = _this._removeTask(taskId);\n\n        if (index === false) return false;\n        removed = index;\n      } else {\n        removed = [];\n\n        _this.tasks.forEach(function (task, idx) {\n          removed.push(idx);\n        });\n\n        _this.tasks = [];\n      }\n\n      return removed;\n    });\n\n    this.add(_tasks);\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(TaskLauncher, [{\n    key: \"findIndex\",\n    value: function findIndex(taskId) {\n      var index; // Если число - то это индекс, и если под индексом есть таск\n\n      if (typeof taskId === 'number' && this.tasks[taskId]) {\n        index = taskId; // Если строка, то это имя\n      } else if (typeof taskId === 'string') {\n        this.tasks.forEach(function (task, ind) {\n          if (task.name === taskId) index = ind;\n        });\n        index = index === undefined ? false : index;\n      } else {\n        return false;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"getTask\",\n    value: function getTask(taskId) {\n      var index = this.findIndex(taskId);\n      if (index === false) return false;\n      return this.tasks[index];\n    }\n  }, {\n    key: \"_stopTask\",\n    value: function _stopTask(taskId) {\n      var index = this.findIndex(taskId);\n      if (index === false) return false;\n      if (!this.tasks[index].run) return false;\n      this.tasks[index].run = false;\n      this.tasks[index].tryNum = 0;\n      this.tasks[index].complete = false;\n      return index;\n    } // Остановка рекурсивной проверки условия\n\n  }, {\n    key: \"_removeTask\",\n    value: function _removeTask(taskId) {\n      var index = this.findIndex(taskId);\n      if (index === false) return false;\n      this.tasks.splice(index, 1);\n      return index;\n    }\n  }]);\n\n  return TaskLauncher;\n}(); // window.TaskLauncher = TaskLauncher;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/modules/task-launcher.js\n");

/***/ }),

/***/ "./src/scripts/modules/xhr.js":
/*!************************************!*\
  !*** ./src/scripts/modules/xhr.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Xhr; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar Xhr =\n/*#__PURE__*/\nfunction () {\n  function Xhr() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Xhr);\n\n    this.xhr = {};\n    this.xhr_counter = 0;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Xhr, [{\n    key: \"request\",\n    value: function request(url) {\n      var _this = this;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$method = _ref.method,\n          method = _ref$method === void 0 ? 'GET' : _ref$method,\n          responseType = _ref.responseType,\n          _ref$body = _ref.body,\n          body = _ref$body === void 0 ? '' : _ref$body,\n          headers = _ref.headers,\n          withCredentials = _ref.withCredentials;\n\n      var progressCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n      var xhr_index = this.xhr_counter++;\n      this.xhr[xhr_index] = new XMLHttpRequest();\n      this.xhr[xhr_index].responseType = responseType || 'text';\n      this.xhr[xhr_index].withCredentials = withCredentials || false;\n      this.xhr[xhr_index].addEventListener('progress', function (e) {\n        if (typeof progressCallback === 'function') progressCallback(e);\n      });\n      return new Promise(function (resolve, reject) {\n        _this.xhr[xhr_index].addEventListener('load', function (e) {\n          delete _this.xhr[xhr_index];\n          resolve(e);\n        });\n\n        _this.xhr[xhr_index].addEventListener('abort', function (e) {\n          delete _this.xhr[xhr_index];\n          reject(e);\n        });\n\n        _this.xhr[xhr_index].addEventListener('error', function (e) {\n          delete _this.xhr[xhr_index];\n          reject(e);\n        });\n\n        _this.xhr[xhr_index].addEventListener('timeout', function (e) {\n          delete _this.xhr[xhr_index];\n          reject(e);\n        });\n\n        _this.xhr[xhr_index].open(method, url, true);\n\n        if (headers) {\n          for (var header in headers) {\n            _this.xhr[xhr_index].setRequestHeader(header, headers[header]);\n          }\n        }\n\n        _this.xhr[xhr_index].send(body);\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      for (var _xhr in this.xhr) {\n        this.xhr[_xhr].abort();\n\n        delete this.xhr[_xhr];\n      }\n\n      return true;\n    }\n  }]);\n\n  return Xhr;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9tb2R1bGVzL3hoci5qcz81YTEyIl0sIm5hbWVzIjpbIlhociIsInhociIsInhocl9jb3VudGVyIiwidXJsIiwibWV0aG9kIiwicmVzcG9uc2VUeXBlIiwiYm9keSIsImhlYWRlcnMiLCJ3aXRoQ3JlZGVudGlhbHMiLCJwcm9ncmVzc0NhbGxiYWNrIiwieGhyX2luZGV4IiwiWE1MSHR0cFJlcXVlc3QiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib3BlbiIsImhlYWRlciIsInNldFJlcXVlc3RIZWFkZXIiLCJzZW5kIiwiX3hociIsImFib3J0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUFBcUJBLEc7OztBQUNqQixpQkFBYztBQUFBOztBQUNWLFNBQUtDLEdBQUwsR0FBVyxFQUFYO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixDQUFuQjtBQUNIOzs7OzRCQUVPQyxHLEVBTTZCO0FBQUE7O0FBQUEscUZBQWpDLEVBQWlDO0FBQUEsNkJBTGpDQyxNQUtpQztBQUFBLFVBTGpDQSxNQUtpQyw0QkFMeEIsS0FLd0I7QUFBQSxVQUpqQ0MsWUFJaUMsUUFKakNBLFlBSWlDO0FBQUEsMkJBSGpDQyxJQUdpQztBQUFBLFVBSGpDQSxJQUdpQywwQkFIMUIsRUFHMEI7QUFBQSxVQUZqQ0MsT0FFaUMsUUFGakNBLE9BRWlDO0FBQUEsVUFEakNDLGVBQ2lDLFFBRGpDQSxlQUNpQzs7QUFBQSxVQUE3QkMsZ0JBQTZCLHVFQUFWLFlBQU0sQ0FBRSxDQUFFO0FBRWpDLFVBQUlDLFNBQVMsR0FBRyxLQUFLUixXQUFMLEVBQWhCO0FBQ0EsV0FBS0QsR0FBTCxDQUFTUyxTQUFULElBQXNCLElBQUlDLGNBQUosRUFBdEI7QUFDQSxXQUFLVixHQUFMLENBQVNTLFNBQVQsRUFBb0JMLFlBQXBCLEdBQW1DQSxZQUFZLElBQUksTUFBbkQ7QUFDQSxXQUFLSixHQUFMLENBQVNTLFNBQVQsRUFBb0JGLGVBQXBCLEdBQXNDQSxlQUFlLElBQUksS0FBekQ7QUFFQSxXQUFLUCxHQUFMLENBQVNTLFNBQVQsRUFBb0JFLGdCQUFwQixDQUFxQyxVQUFyQyxFQUFpRCxVQUFBQyxDQUFDLEVBQUk7QUFDbEQsWUFBSSxPQUFPSixnQkFBUCxLQUE0QixVQUFoQyxFQUE0Q0EsZ0JBQWdCLENBQUNJLENBQUQsQ0FBaEI7QUFDL0MsT0FGRDtBQUlBLGFBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQyxhQUFJLENBQUNmLEdBQUwsQ0FBU1MsU0FBVCxFQUFvQkUsZ0JBQXBCLENBQXFDLE1BQXJDLEVBQTZDLFVBQUFDLENBQUMsRUFBSTtBQUM5QyxpQkFBTyxLQUFJLENBQUNaLEdBQUwsQ0FBU1MsU0FBVCxDQUFQO0FBQ0FLLGlCQUFPLENBQUNGLENBQUQsQ0FBUDtBQUNILFNBSEQ7O0FBSUEsYUFBSSxDQUFDWixHQUFMLENBQVNTLFNBQVQsRUFBb0JFLGdCQUFwQixDQUFxQyxPQUFyQyxFQUE4QyxVQUFBQyxDQUFDLEVBQUk7QUFDL0MsaUJBQU8sS0FBSSxDQUFDWixHQUFMLENBQVNTLFNBQVQsQ0FBUDtBQUNBTSxnQkFBTSxDQUFDSCxDQUFELENBQU47QUFDSCxTQUhEOztBQUlBLGFBQUksQ0FBQ1osR0FBTCxDQUFTUyxTQUFULEVBQW9CRSxnQkFBcEIsQ0FBcUMsT0FBckMsRUFBOEMsVUFBQUMsQ0FBQyxFQUFJO0FBQy9DLGlCQUFPLEtBQUksQ0FBQ1osR0FBTCxDQUFTUyxTQUFULENBQVA7QUFDQU0sZ0JBQU0sQ0FBQ0gsQ0FBRCxDQUFOO0FBQ0gsU0FIRDs7QUFJQSxhQUFJLENBQUNaLEdBQUwsQ0FBU1MsU0FBVCxFQUFvQkUsZ0JBQXBCLENBQXFDLFNBQXJDLEVBQWdELFVBQUFDLENBQUMsRUFBSTtBQUNqRCxpQkFBTyxLQUFJLENBQUNaLEdBQUwsQ0FBU1MsU0FBVCxDQUFQO0FBQ0FNLGdCQUFNLENBQUNILENBQUQsQ0FBTjtBQUNILFNBSEQ7O0FBS0EsYUFBSSxDQUFDWixHQUFMLENBQVNTLFNBQVQsRUFBb0JPLElBQXBCLENBQXlCYixNQUF6QixFQUFpQ0QsR0FBakMsRUFBc0MsSUFBdEM7O0FBRUEsWUFBSUksT0FBSixFQUFhO0FBQ1QsZUFBSyxJQUFJVyxNQUFULElBQW1CWCxPQUFuQixFQUE0QjtBQUN4QixpQkFBSSxDQUFDTixHQUFMLENBQVNTLFNBQVQsRUFBb0JTLGdCQUFwQixDQUFxQ0QsTUFBckMsRUFBNkNYLE9BQU8sQ0FBQ1csTUFBRCxDQUFwRDtBQUNIO0FBQ0o7O0FBRUQsYUFBSSxDQUFDakIsR0FBTCxDQUFTUyxTQUFULEVBQW9CVSxJQUFwQixDQUF5QmQsSUFBekI7QUFDSCxPQTNCTSxDQUFQO0FBNEJIOzs7NEJBRU87QUFDSixXQUFLLElBQUllLElBQVQsSUFBaUIsS0FBS3BCLEdBQXRCLEVBQTJCO0FBQ3ZCLGFBQUtBLEdBQUwsQ0FBU29CLElBQVQsRUFBZUMsS0FBZjs7QUFDQSxlQUFPLEtBQUtyQixHQUFMLENBQVNvQixJQUFULENBQVA7QUFDSDs7QUFFRCxhQUFPLElBQVA7QUFDSCIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL21vZHVsZXMveGhyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgWGhyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMueGhyID0ge307XHJcbiAgICAgICAgdGhpcy54aHJfY291bnRlciA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgcmVxdWVzdCh1cmwsIHtcclxuICAgICAgICBtZXRob2QgPSAnR0VUJyxcclxuICAgICAgICByZXNwb25zZVR5cGUsXHJcbiAgICAgICAgYm9keSA9ICcnLFxyXG4gICAgICAgIGhlYWRlcnMsXHJcbiAgICAgICAgd2l0aENyZWRlbnRpYWxzXHJcbiAgICB9ID0ge30sIHByb2dyZXNzQ2FsbGJhY2sgPSAoKSA9PiB7fSkge1xyXG5cclxuICAgICAgICBsZXQgeGhyX2luZGV4ID0gdGhpcy54aHJfY291bnRlcisrO1xyXG4gICAgICAgIHRoaXMueGhyW3hocl9pbmRleF0gPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgICAgICB0aGlzLnhoclt4aHJfaW5kZXhdLnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZSB8fCAndGV4dCc7XHJcbiAgICAgICAgdGhpcy54aHJbeGhyX2luZGV4XS53aXRoQ3JlZGVudGlhbHMgPSB3aXRoQ3JlZGVudGlhbHMgfHwgZmFsc2U7XHJcblxyXG4gICAgICAgIHRoaXMueGhyW3hocl9pbmRleF0uYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBlID0+IHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9ncmVzc0NhbGxiYWNrID09PSAnZnVuY3Rpb24nKSBwcm9ncmVzc0NhbGxiYWNrKGUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnhoclt4aHJfaW5kZXhdLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBlID0+IHtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnhoclt4aHJfaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMueGhyW3hocl9pbmRleF0uYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBlID0+IHtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnhoclt4aHJfaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy54aHJbeGhyX2luZGV4XS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMueGhyW3hocl9pbmRleF07XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLnhoclt4aHJfaW5kZXhdLmFkZEV2ZW50TGlzdGVuZXIoJ3RpbWVvdXQnLCBlID0+IHtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnhoclt4aHJfaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMueGhyW3hocl9pbmRleF0ub3BlbihtZXRob2QsIHVybCwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoaGVhZGVycykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaGVhZGVyIGluIGhlYWRlcnMpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnhoclt4aHJfaW5kZXhdLnNldFJlcXVlc3RIZWFkZXIoaGVhZGVyLCBoZWFkZXJzW2hlYWRlcl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnhoclt4aHJfaW5kZXhdLnNlbmQoYm9keSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWJvcnQoKSB7XHJcbiAgICAgICAgZm9yIChsZXQgX3hociBpbiB0aGlzLnhocikge1xyXG4gICAgICAgICAgICB0aGlzLnhocltfeGhyXS5hYm9ydCgpO1xyXG4gICAgICAgICAgICBkZWxldGUgdGhpcy54aHJbX3hocl07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/modules/xhr.js\n");

/***/ })

/******/ });